#include <iostream>
#include <algorithm>
#include <iterator>
#include <vector>

using namespace std;

bool Isodd(int i) {
  return (i & 1);
}

int main()
{
   vector<int> v;
   vector<int> v1;
   vector<int> v2;

   //inserting values (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
   for (int i = 0; i < 10; i++) {
      v.push_back(i + 1);
   }

   //using copy_if with normal function as predicate 
   copy_if(v.begin(), v.end(), back_inserter(v1), Isodd);
   
   //using copy_if with lambda function as predicate
   copy_if(v.begin(), v.end(), back_inserter(v2), [](int i) {
                                                       return(i % 2 == 0);
                                                  });
   
   //using copy to print vectors
   copy(v.begin(), v.end(), ostream_iterator<int>(cout, " "));
   cout << endl;
   copy(v1.begin(), v1.end(), ostream_iterator<int>(cout, " "));
   cout << endl;
   copy(v2.begin(), v2.end(), ostream_iterator<int>(cout, " "));

   return 0;
}